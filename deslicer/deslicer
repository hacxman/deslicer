#!/usr/bin/python
import json
import socket
import sys
import base64
import os

def readupto(fd, c='\n'):
  data = ''
  while True:
    d = os.read(fd, 1)
    data += d
    if d == c:
       return data
  return data


def talkto(data, sock):
    data = json.dumps(data)
    datalen = len(data)
    sock.sendall(str(datalen)+"\n")
    if datalen > 30000:
      cnt = 0
      while cnt != datalen:
        sz = 4096 if cnt < datalen - 4096 else datalen - cnt
        sock.sendall(data[cnt:cnt+sz])
        sys.stdout.write('U {}/{}B\r'.format(cnt, datalen))
        cnt += sz
      sys.stdout.write('\n')
    else:
      sock.sendall(data)


    # Receive data from the server and shut down
    fd = sock.fileno()
    n = int(readupto(fd).strip())
    cnt = 0
    res = ''
    while cnt != n:
      sz = 4096 if cnt < n - 4096 else n - cnt
      r = os.read(fd, sz)
      cnt += len(r)
      res += r
      if n > 30000:
        sys.stdout.write('D {}/{}B\r'.format(cnt, n))

    if n > 30000:
      sys.stdout.write('\n')

    return json.loads(res)

def show_help():
  print """usage: deslicer_client.py COMMAND [PARAM]
COMMANDS are one of:
  import STLFILE            - import an STL file
  importconfig CFGFILE      - import slic3r ini file
  ping                      - ping server
  list                      - same as listi listc listd sequentially
  listi                     - list imported STLs
  listc                     - list imported configs
  listd                     - list sliced files
  slice UPLOADEDID [-c CFG] - slice an uploaded STL [and use CFG config file]
  get SLICEDID              - downloaded sliced GCode
  """

def run(sock, args=sys.argv):
  if '-h' in args:
    show_help()
    exit(2)

  if 'import' in args:
    i = args.index('import') + 1
    with open(args[i]) as fin:
      fdata = fin.read()
    data = {'cmd': 'import',
        'data': base64.encodestring(fdata),
        'name': base64.encodestring(args[i])}
  elif 'importconfig' in args:
    i = args.index('importconfig') + 1
    with open(args[i]) as fin:
      fdata = fin.read()
    data = {'cmd': 'importconfig',
        'data': base64.encodestring(fdata),
        'name': base64.encodestring(args[i])}

  elif 'ping' in args:
    data = {'cmd': 'ping', 'c': 0}

  elif 'listi' in args:
    data = {'cmd': 'listimported'}
  elif 'listc' in args:
    data = {'cmd': 'listconfig'}
  elif 'slice' in args:
    i = args.index('slice') + 1
    if '-c' in args[i+1:]:
      cfg = args[i+2]
      data = {'cmd': 'slice', 'id': args[i], 'cfg': cfg}
    else:
      data = {'cmd': 'slice', 'id': args[i]}


  elif 'listd' in args:
    data = {'cmd': 'listdone'}
  elif 'listp' in args:
    data = {'cmd': 'listprogress'}
  elif 'get' in args:
    i = args.index('get') + 1
    data = {'cmd': 'getdone', 'id': args[i]}
  elif 'list' in args:
    print 'STL files already on server'
    run(sock, ['listi'])
    print
    print 'Slic3r config files already on server'
    run(sock, ['listc'])
    print
    print 'Output GCode'
    run(sock, ['listd'])
    print
    print 'In progress'
    run(sock, ['listp'])
    return
  else:
    print 'unknown command parameters'
    print
    show_help()
    exit(3)

  ret = talkto(data, sock)
  if ret.has_key(u'm'):
    print ret['m']
  if ret.has_key('files'):
    print 'Response:'
    for f in ret['files']:
      print base64.decodestring(f['nm']), '-', 'id:', f['id'], 'size:', f['sz']

  if 'get' in args and ret.has_key(u'data'):
    fdata = base64.decodestring(ret['data'])
    with open(args[i], 'w+') as fin:
      fin.write(fdata)


if __name__=="__main__":
  HOST, PORT = "qwop.doma", 9999

  # Create a socket (SOCK_STREAM means a TCP socket)
  sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)
  sock.connect((HOST, PORT))

  try:
    run(sock)
  finally:
    sock.close()
